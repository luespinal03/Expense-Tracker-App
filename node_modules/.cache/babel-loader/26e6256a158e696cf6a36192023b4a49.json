{"ast":null,"code":"var _jsxFileName = \"/Users/luise/Documents/Udemy-Courses/react-course/Expense-Tracker-App/src/components/NewExpense/NewExpense.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './NewExpense.css';\nimport ExpenseForm from './ExpenseForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewExpense = props => {\n  _s();\n  console.log(props);\n  const [isEditing, setisEditing] = useState(false);\n  // function below is handling the new created data, being passed in up from ExpenseForm component\n  // the parameter enteredExpenseData on the line below is holding the information of the newly created expense item thats being passed up from line 43 in ExpenseForm.js\n  const onSaveExpenseDataHandler = enteredExpenseData => {\n    // here we are spreading the data object we collected from our user and adding it a random ID (kind of like open it to put a new piece of data in it???)\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.floor(Math.random().toString() * 1000)\n    };\n    // on line below we are passing the 'no-shit' ready to go newly created expense item as (expenseData) into the function onAddExpense via props (App.js line 51)\n    props.onAddExpense(expenseData);\n    setisEditing(false);\n    console.log(expenseData);\n  };\n  const startEditingHandler = () => {\n    setisEditing(true);\n  };\n  const stopEditingHandler = () => {\n    setisEditing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-expense\",\n    children: [!isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startEditingHandler,\n      className: \"add-expense-button\",\n      children: \"Add New Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 28\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(ExpenseForm, {\n      onSaveExpenseData: onSaveExpenseDataHandler,\n      isEditing: isEditing,\n      stopEditingHandler: stopEditingHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(NewExpense, \"hjPcwFQzoll+xvBLZUCOD7QR/qs=\");\n_c = NewExpense;\nexport default NewExpense;\nvar _c;\n$RefreshReg$(_c, \"NewExpense\");","map":{"version":3,"names":["useState","ExpenseForm","NewExpense","props","console","log","isEditing","setisEditing","onSaveExpenseDataHandler","enteredExpenseData","expenseData","id","Math","floor","random","toString","onAddExpense","startEditingHandler","stopEditingHandler"],"sources":["/Users/luise/Documents/Udemy-Courses/react-course/Expense-Tracker-App/src/components/NewExpense/NewExpense.js"],"sourcesContent":["import { useState } from 'react';\nimport './NewExpense.css';\nimport ExpenseForm from './ExpenseForm';\n\n\nconst NewExpense = (props) => {\n    console.log(props)\n\n    const [isEditing, setisEditing] = useState(false);\n    // function below is handling the new created data, being passed in up from ExpenseForm component\n    // the parameter enteredExpenseData on the line below is holding the information of the newly created expense item thats being passed up from line 43 in ExpenseForm.js\n    const onSaveExpenseDataHandler = (enteredExpenseData) => {\n        // here we are spreading the data object we collected from our user and adding it a random ID (kind of like open it to put a new piece of data in it???)\n        const expenseData = {\n            ...enteredExpenseData,\n            id: Math.floor(Math.random().toString() * 1000)\n        };\n        // on line below we are passing the 'no-shit' ready to go newly created expense item as (expenseData) into the function onAddExpense via props (App.js line 51)\n        props.onAddExpense(expenseData);\n        setisEditing(false)\n\n        console.log(expenseData);\n    };\n\n\n\n    const startEditingHandler = () => {\n        setisEditing(true);\n    };\n\n    const stopEditingHandler = () => {\n        setisEditing(false);\n    };\n\n    return (\n        <div className='new-expense'>\n            {/* naming convention, start with on so we know the value for this prop is a function that can be called inside the ExpenseForm component */}\n            {/* if isEditing is set to false then render the button */}\n            {!isEditing && <button onClick={startEditingHandler} className='add-expense-button'>Add New Expense</button>}\n            {/* if isEditing is set to true then render the form below */}\n            {isEditing && <ExpenseForm onSaveExpenseData={onSaveExpenseDataHandler} isEditing={isEditing} stopEditingHandler={stopEditingHandler} />}\n        </div>\n    )\n}\n\nexport default NewExpense;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,kBAAkB;AACzB,OAAOC,WAAW,MAAM,eAAe;AAAC;AAGxC,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAAA;EAC1BC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAElB,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACjD;EACA;EACA,MAAMQ,wBAAwB,GAAIC,kBAAkB,IAAK;IACrD;IACA,MAAMC,WAAW,GAAG;MAChB,GAAGD,kBAAkB;MACrBE,EAAE,EAAEC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,CAACC,QAAQ,EAAE,GAAG,IAAI;IAClD,CAAC;IACD;IACAZ,KAAK,CAACa,YAAY,CAACN,WAAW,CAAC;IAC/BH,YAAY,CAAC,KAAK,CAAC;IAEnBH,OAAO,CAACC,GAAG,CAACK,WAAW,CAAC;EAC5B,CAAC;EAID,MAAMO,mBAAmB,GAAG,MAAM;IAC9BV,YAAY,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMW,kBAAkB,GAAG,MAAM;IAC7BX,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,oBACI;IAAK,SAAS,EAAC,aAAa;IAAA,WAGvB,CAACD,SAAS,iBAAI;MAAQ,OAAO,EAAEW,mBAAoB;MAAC,SAAS,EAAC,oBAAoB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAyB,EAE3GX,SAAS,iBAAI,QAAC,WAAW;MAAC,iBAAiB,EAAEE,wBAAyB;MAAC,SAAS,EAAEF,SAAU;MAAC,kBAAkB,EAAEY;IAAmB;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACtI;AAEd,CAAC;AAAA,GAtCKhB,UAAU;AAAA,KAAVA,UAAU;AAwChB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module"}