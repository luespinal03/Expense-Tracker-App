{"ast":null,"code":"var _jsxFileName = \"/Users/luise/Documents/Udemy-Courses/react-course/Expense-Tracker-App/src/components/Expenses/ExpensesList.js\";\nimport React from 'react';\nimport ExpenseItem from './ExpenseItem';\nimport './ExpensesList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpensesList = _ref => {\n  let {\n    filteredExpenses\n  } = _ref;\n  {/* we are currently passing items in through props. We are then mapping them so we can reach every single one of them. Then we are setting each expense into the component <ExpenseItem/> as props as well in form of title, amount, and date */}\n  {/* if filteredExpenses.length equal to 0? yes? then render whats right after the ? mark. if not then render the Expense items corresponding to the year selected */}\n  if (filteredExpenses.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"expenses-list__fallback\",\n      children: \"Found no expenses.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    classname: \"expenses-list\",\n    children: filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem\n    // individual id's are better than index as keys\n    , {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 13\n  }, this);\n};\n_c = ExpensesList;\nexport default ExpensesList;\nvar _c;\n$RefreshReg$(_c, \"ExpensesList\");","map":{"version":3,"names":["React","ExpenseItem","ExpensesList","filteredExpenses","length","map","expense","title","amount","date","id"],"sources":["/Users/luise/Documents/Udemy-Courses/react-course/Expense-Tracker-App/src/components/Expenses/ExpensesList.js"],"sourcesContent":["import React from 'react'\nimport ExpenseItem from './ExpenseItem';\nimport './ExpensesList.css'\n\nconst ExpensesList = ({ filteredExpenses }) => {\n\n\n    {/* we are currently passing items in through props. We are then mapping them so we can reach every single one of them. Then we are setting each expense into the component <ExpenseItem/> as props as well in form of title, amount, and date */ }\n    {/* if filteredExpenses.length equal to 0? yes? then render whats right after the ? mark. if not then render the Expense items corresponding to the year selected */ }\n    if (filteredExpenses.length === 0) {\n        return <h2 className='expenses-list__fallback'>Found no expenses.</h2>\n    }\n\n\n\n    return (<ul classname=\"expenses-list\">{\n        filteredExpenses.map((expense) => (\n            <ExpenseItem\n                // individual id's are better than index as keys\n                key={expense.id}\n                title={expense.title}\n                amount={expense.amount}\n                date={expense.date}\n            />\n        ))}\n    </ul>\n    );\n};\n\nexport default ExpensesList"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,oBAAoB;AAAA;AAE3B,MAAMC,YAAY,GAAG,QAA0B;EAAA,IAAzB;IAAEC;EAAiB,CAAC;EAGtC,CAAC,gPAAiP;EAClP,CAAC,mKAAoK;EACrK,IAAIA,gBAAgB,CAACC,MAAM,KAAK,CAAC,EAAE;IAC/B,oBAAO;MAAI,SAAS,EAAC,yBAAyB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAwB;EAC1E;EAIA,oBAAQ;IAAI,SAAS,EAAC,eAAe;IAAA,UACjCD,gBAAgB,CAACE,GAAG,CAAEC,OAAO,iBACzB,QAAC;IACG;IAAA;MAEA,KAAK,EAAEA,OAAO,CAACC,KAAM;MACrB,MAAM,EAAED,OAAO,CAACE,MAAO;MACvB,IAAI,EAAEF,OAAO,CAACG;IAAK,GAHdH,OAAO,CAACI,EAAE;MAAA;MAAA;MAAA;IAAA,QAKtB;EAAC;IAAA;IAAA;IAAA;EAAA,QACD;AAET,CAAC;AAAC,KAvBIR,YAAY;AAyBlB,eAAeA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module"}