{"ast":null,"code":"var _jsxFileName = \"/Users/luise/Documents/Udemy-Courses/react-course/Expense-Tracker-App/src/components/NewExpense/ExpenseForm.js\",\n  _s = $RefreshSig$();\nimport './ExpenseForm.css';\nimport { useState } from 'react';\n\n// Here we are passing onSaveExpenseDataHandler as a props. Function in charge of spreading the current information that was collected based on user input, adding an ID to our newly created expense\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseForm = props => {\n  _s();\n  console.log(props);\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredDate, setenteredDate] = useState('');\n\n  // handling the title based on what the user inputs\n  const titleChangeHandler = e => {\n    // console.log(e);\n    setEnteredTitle(e.target.value);\n  };\n\n  // handling the amount based on what the user inputs\n  const amountChangeHandler = e => {\n    // console.log(e)\n    setEnteredAmount(e.target.value);\n  };\n\n  // handling the date based on what the user inputs\n  const dateChangeHandler = e => {\n    // console.log(e);\n    setenteredDate(e.target.value);\n  };\n\n  /*********************\n      SUBMIT HANDLER\n  *********************/\n  // prevent default from the event (full page refresh)\n  const submitHandler = e => {\n    e.preventDefault();\n    // creating a new expense based on user input data\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate)\n    };\n    // here we are passing our user collected data back up to onSaveExpenseData via props (refer to line 23 in NewExpense.js)\n    props.onSaveExpenseData(expenseData);\n    // 3 lines of code below this comment are to reset the input values to empty after the form gets submitted\n    setEnteredTitle('');\n    setEnteredAmount('');\n    setenteredDate('');\n  };\n  /*********************\n      SUBMIT HANDLER\n   *********************/\n\n  const addNewExpenseHandler = () => {\n    /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__controls\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: enteredTitle,\n            onChange: titleChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__controls\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"0.01\",\n            step: \"0.01\",\n            value: enteredAmount,\n            onChange: amountChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__controls\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            min: \"2019-01-01\",\n            max: \"2023-12-31\",\n            value: enteredDate,\n            onChange: dateChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-expense__actions\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    onClick: () => addNewExpenseHandler(),\n    className: \"new-expense__actions\",\n    children: \"Add New Expense\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n_s(ExpenseForm, \"N7m3F0ak16uKNDVu2tn5jPvXxho=\");\n_c = ExpenseForm;\nexport default ExpenseForm;\nvar _c;\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["useState","ExpenseForm","props","console","log","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setenteredDate","titleChangeHandler","e","target","value","amountChangeHandler","dateChangeHandler","submitHandler","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","addNewExpenseHandler"],"sources":["/Users/luise/Documents/Udemy-Courses/react-course/Expense-Tracker-App/src/components/NewExpense/ExpenseForm.js"],"sourcesContent":["import './ExpenseForm.css'\nimport { useState } from 'react';\n\n// Here we are passing onSaveExpenseDataHandler as a props. Function in charge of spreading the current information that was collected based on user input, adding an ID to our newly created expense\nconst ExpenseForm = (props) => {\n    console.log(props);\n\n    const [enteredTitle, setEnteredTitle] = useState('');\n    const [enteredAmount, setEnteredAmount] = useState('');\n    const [enteredDate, setenteredDate] = useState('');\n\n\n    // handling the title based on what the user inputs\n    const titleChangeHandler = (e) => {\n        // console.log(e);\n        setEnteredTitle(e.target.value);\n    }\n\n    // handling the amount based on what the user inputs\n    const amountChangeHandler = (e) => {\n        // console.log(e)\n        setEnteredAmount(e.target.value);\n    }\n\n    // handling the date based on what the user inputs\n    const dateChangeHandler = (e) => {\n        // console.log(e);\n        setenteredDate(e.target.value);\n    }\n\n\n\n\n    /*********************\n        SUBMIT HANDLER\n    *********************/\n    // prevent default from the event (full page refresh)\n    const submitHandler = (e) => {\n        e.preventDefault();\n        // creating a new expense based on user input data\n        const expenseData = {\n            title: enteredTitle,\n            amount: enteredAmount,\n            date: new Date(enteredDate)\n        }\n        // here we are passing our user collected data back up to onSaveExpenseData via props (refer to line 23 in NewExpense.js)\n        props.onSaveExpenseData(expenseData);\n        // 3 lines of code below this comment are to reset the input values to empty after the form gets submitted\n        setEnteredTitle('')\n        setEnteredAmount('')\n        setenteredDate('')\n    }\n    /*********************\n        SUBMIT HANDLER\n     *********************/\n\n    const addNewExpenseHandler = () => {\n        <form onSubmit={submitHandler}>\n            <div className=\"new-expense__controls\">\n                <div className=\"new-expense__control\">\n                    <label>Title</label>\n                    {/* value is what the input will begin with, in this case it will start off as empty */}\n                    <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler} />\n                </div>\n            </div>\n            <div className=\"new-expense__controls\">\n                <div className=\"new-expense__control\">\n                    <label>Amount</label>\n                    {/* value is what the input will begin with, in this case it will start off as empty */}\n                    <input type=\"number\" min=\"0.01\" step=\"0.01\" value={enteredAmount} onChange={amountChangeHandler} />\n                </div>\n            </div>\n            <div className=\"new-expense__controls\">\n                <div className=\"new-expense__control\">\n                    <label>Date</label>\n                    {/* value is what the input will begin with, in this case it will start off as empty */}\n                    <input type=\"date\" min=\"2019-01-01\" max=\"2023-12-31\" value={enteredDate} onChange={dateChangeHandler} />\n                </div>\n            </div>\n            <div className=\"new-expense__actions\">\n                <button className=\"new-expense__actions\">Cancel</button>\n                <button type=\"submit\">Add Expense</button>\n            </div>\n        </form>\n    }\n\n\n\n\n    return (\n        <button type='button' onClick={() => addNewExpenseHandler()} className=\"new-expense__actions\">Add New Expense</button>\n    );\n};\n\n\nexport default ExpenseForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}