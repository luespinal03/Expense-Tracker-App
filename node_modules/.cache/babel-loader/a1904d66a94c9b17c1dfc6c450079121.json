{"ast":null,"code":"var _jsxFileName = \"/Users/luise/Documents/Udemy-Courses/react-course/Expense-Tracker-App/src/components/Expenses/Expenses.js\",\n  _s = $RefreshSig$();\nimport ExpenseItem from './ExpenseItem';\nimport Card from '../UI/Card';\nimport './Expenses.css';\nimport ExpensesFilter from './ExpensesFilter';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Expenses = props => {\n  _s();\n  console.log(props);\n  const [filteredYear, setFilteredYear] = useState('2020');\n\n  // this function is taking the value of selectedYear (the year the user selected) and passing it to setFilteredYear which is then changing the value of filteredYear via useState.\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n\n  // function below is in charge of grabbing each item and comparing their year. If the year in the individual item matches the filteredYear aka year selected by the user then it will render on the page.\n  const filteredExpenses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expenses found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 27\n  }, this);\n  if (filteredExpenses.length > 0) {\n    expensesContent = filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem\n    // individual id's are better than index as keys\n    , {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filteredYear,\n        onFilterChange: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), filteredExpenses.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No expenses found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 51\n      }, this) : expensesContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(Expenses, \"d6AxVjxjRbYO2YFEia8LjUybrDc=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["ExpenseItem","Card","ExpensesFilter","useState","Expenses","props","console","log","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpenses","items","filter","expense","date","getFullYear","toString","expensesContent","length","map","title","amount","id"],"sources":["/Users/luise/Documents/Udemy-Courses/react-course/Expense-Tracker-App/src/components/Expenses/Expenses.js"],"sourcesContent":["import ExpenseItem from './ExpenseItem';\nimport Card from '../UI/Card';\nimport './Expenses.css';\nimport ExpensesFilter from './ExpensesFilter';\nimport { useState } from 'react'\n\nconst Expenses = (props) => {\n    console.log(props)\n\n    const [filteredYear, setFilteredYear] = useState('2020');\n\n    // this function is taking the value of selectedYear (the year the user selected) and passing it to setFilteredYear which is then changing the value of filteredYear via useState.\n    const filterChangeHandler = (selectedYear) => {\n        setFilteredYear(selectedYear);\n    };\n\n    // function below is in charge of grabbing each item and comparing their year. If the year in the individual item matches the filteredYear aka year selected by the user then it will render on the page.\n    const filteredExpenses = props.items.filter(expense => {\n        return expense.date.getFullYear().toString() === filteredYear;\n    });\n\n\n    let expensesContent = <p>No expenses found.</p>;\n\n    if (filteredExpenses.length > 0) {\n        expensesContent = filteredExpenses.map((expense) => (\n            <ExpenseItem\n                // individual id's are better than index as keys\n                key={expense.id}\n                title={expense.title}\n                amount={expense.amount}\n                date={expense.date}\n            />\n        ))\n    }\n\n    return (\n        <div>\n\n            <Card className=\"expenses\">\n                {/* passing filterChangeHandler via props down to ExpensesFilter */}\n                {/* passing filteredYear via props down to ExpensesFilter */}\n                <ExpensesFilter\n                    selected={filteredYear} onFilterChange={filterChangeHandler} />\n\n                {/* we are currently passing items in through props. We are then mapping them so we can reach every single one of them. Then we are setting each expense into the component <ExpenseItem/> as props as well in form of title, amount, and date */}\n                {/* if filteredExpenses.length equal to 0? yes? then render whats right after the ? mark. if not then render the Expense items corresponding to the year selected */}\n                {filteredExpenses.length === 0 ? (<p>No expenses found.</p>) : expensesContent}\n            </Card>\n        </div>\n    );\n}\n\nexport default Expenses;"],"mappings":";;AAAA,OAAOA,WAAW,MAAM,eAAe;AACvC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,gBAAgB;AACvB,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,SAASC,QAAQ,QAAQ,OAAO;AAAA;AAEhC,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAA;EACxBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAElB,MAAM,CAACG,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,MAAM,CAAC;;EAExD;EACA,MAAMO,mBAAmB,GAAIC,YAAY,IAAK;IAC1CF,eAAe,CAACE,YAAY,CAAC;EACjC,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAGP,KAAK,CAACQ,KAAK,CAACC,MAAM,CAACC,OAAO,IAAI;IACnD,OAAOA,OAAO,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,EAAE,KAAKV,YAAY;EACjE,CAAC,CAAC;EAGF,IAAIW,eAAe,gBAAG;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAyB;EAE/C,IAAIP,gBAAgB,CAACQ,MAAM,GAAG,CAAC,EAAE;IAC7BD,eAAe,GAAGP,gBAAgB,CAACS,GAAG,CAAEN,OAAO,iBAC3C,QAAC;IACG;IAAA;MAEA,KAAK,EAAEA,OAAO,CAACO,KAAM;MACrB,MAAM,EAAEP,OAAO,CAACQ,MAAO;MACvB,IAAI,EAAER,OAAO,CAACC;IAAK,GAHdD,OAAO,CAACS,EAAE;MAAA;MAAA;MAAA;IAAA,QAKtB,CAAC;EACN;EAEA,oBACI;IAAA,uBAEI,QAAC,IAAI;MAAC,SAAS,EAAC,UAAU;MAAA,wBAGtB,QAAC,cAAc;QACX,QAAQ,EAAEhB,YAAa;QAAC,cAAc,EAAEE;MAAoB;QAAA;QAAA;QAAA;MAAA,QAAG,EAIlEE,gBAAgB,CAACQ,MAAM,KAAK,CAAC,gBAAI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAyB,GAAID,eAAe;IAAA;MAAA;MAAA;MAAA;IAAA;EAC3E;IAAA;IAAA;IAAA;EAAA,QACL;AAEd,CAAC;AAAA,GA7CKf,QAAQ;AAAA,KAARA,QAAQ;AA+Cd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}